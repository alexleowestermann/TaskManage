{"ast":null,"code":"var _jsxFileName = \"/Users/maximilianwestermann/Desktop/SideProject/TaskManager/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllTasks, addTask, deleteTask, renameTask } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState(\"\");\n  const [newDeadline, setNewDeadline] = useState(\"\");\n  const [renameText, setRenameText] = useState({});\n  const loadTasks = () => {\n    getAllTasks().then(setTasks);\n  };\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  const handleAdd = () => {\n    if (newTaskName.trim()) {\n      const isoDeadline = newDeadline ? `${newDeadline}T00:00:00` : null;\n      addTask({\n        taskName: newTaskName,\n        deadline: isoDeadline\n      }).then(() => {\n        setNewTaskName(\"\");\n        setNewDeadline(\"\");\n        loadTasks();\n      });\n    }\n  };\n  const handleRename = id => {\n    var _renameText$id;\n    if ((_renameText$id = renameText[id]) !== null && _renameText$id !== void 0 && _renameText$id.trim()) {\n      renameTask(id, renameText[id]).then(loadTasks);\n    }\n  };\n  const handleDelete = id => {\n    deleteTask(id).then(loadTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DevTasker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New task name\",\n        value: newTaskName,\n        onChange: e => setNewTaskName(e.target.value),\n        style: {\n          marginRight: \"0.5rem\",\n          padding: \"0.5rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newDeadline,\n        onChange: e => setNewDeadline(e.target.value),\n        style: {\n          marginRight: \"0.5rem\",\n          padding: \"0.5rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        style: {\n          padding: \"0.5rem 1rem\",\n          borderRadius: \"6px\"\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        paddingLeft: 0\n      },\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"1rem\",\n          background: \"#f4f4f4\",\n          padding: \"1rem\",\n          borderRadius: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), task.deadline && !isNaN(new Date(task.deadline)) && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"0.5rem\",\n              color: \"#888\"\n            },\n            children: [\"(Due: \", new Date(task.deadline).toLocaleDateString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginTop: \"0.5rem\",\n            marginRight: \"0.5rem\",\n            padding: \"0.4rem\"\n          },\n          placeholder: \"New name\",\n          value: renameText[task.id] || \"\",\n          onChange: e => setRenameText({\n            ...renameText,\n            [task.id]: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRename(task.id),\n          style: {\n            marginRight: \"0.5rem\",\n            borderRadius: \"6px\"\n          },\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          style: {\n            borderRadius: \"6px\"\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jt4L/ikF1JNbMX2kZ2Att7oKDzg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","getAllTasks","addTask","deleteTask","renameTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTaskName","setNewTaskName","newDeadline","setNewDeadline","renameText","setRenameText","loadTasks","then","handleAdd","trim","isoDeadline","taskName","deadline","handleRename","id","_renameText$id","handleDelete","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","value","onChange","e","target","marginRight","onClick","borderRadius","listStyle","paddingLeft","map","task","background","isNaN","Date","marginLeft","color","toLocaleDateString","marginTop","_c","$RefreshReg$"],"sources":["/Users/maximilianwestermann/Desktop/SideProject/TaskManager/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllTasks, addTask, deleteTask, renameTask } from \"./api\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskName, setNewTaskName] = useState(\"\");\n  const [newDeadline, setNewDeadline] = useState(\"\");\n  const [renameText, setRenameText] = useState({});\n\n  const loadTasks = () => {\n    getAllTasks().then(setTasks);\n  };\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  const handleAdd = () => {\n    if (newTaskName.trim()) {\n      const isoDeadline = newDeadline ? `${newDeadline}T00:00:00` : null;\n\n      addTask({ taskName: newTaskName, deadline: isoDeadline }).then(() => {\n        setNewTaskName(\"\");\n        setNewDeadline(\"\");\n        loadTasks();\n      });\n    }\n  };\n\n  const handleRename = (id) => {\n    if (renameText[id]?.trim()) {\n      renameTask(id, renameText[id]).then(loadTasks);\n    }\n  };\n\n  const handleDelete = (id) => {\n    deleteTask(id).then(loadTasks);\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>DevTasker</h1>\n\n      <div style={{ marginBottom: \"1rem\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"New task name\"\n          value={newTaskName}\n          onChange={(e) => setNewTaskName(e.target.value)}\n          style={{ marginRight: \"0.5rem\", padding: \"0.5rem\" }}\n        />\n        <input\n          type=\"date\"\n          value={newDeadline}\n          onChange={(e) => setNewDeadline(e.target.value)}\n          style={{ marginRight: \"0.5rem\", padding: \"0.5rem\" }}\n        />\n        <button\n          onClick={handleAdd}\n          style={{ padding: \"0.5rem 1rem\", borderRadius: \"6px\" }}\n        >\n          Add Task\n        </button>\n      </div>\n\n      <ul style={{ listStyle: \"none\", paddingLeft: 0 }}>\n        {tasks.map((task) => (\n          <li\n            key={task.id}\n            style={{\n              marginBottom: \"1rem\",\n              background: \"#f4f4f4\",\n              padding: \"1rem\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <div>\n              <strong>{task.taskName}</strong>\n              {task.deadline && !isNaN(new Date(task.deadline)) && (\n                <span style={{ marginLeft: \"0.5rem\", color: \"#888\" }}>\n                  (Due: {new Date(task.deadline).toLocaleDateString()})\n                </span>\n              )}\n            </div>\n\n            <input\n              style={{ marginTop: \"0.5rem\", marginRight: \"0.5rem\", padding: \"0.4rem\" }}\n              placeholder=\"New name\"\n              value={renameText[task.id] || \"\"}\n              onChange={(e) =>\n                setRenameText({ ...renameText, [task.id]: e.target.value })\n              }\n            />\n            <button\n              onClick={() => handleRename(task.id)}\n              style={{ marginRight: \"0.5rem\", borderRadius: \"6px\" }}\n            >\n              Rename\n            </button>\n            <button\n              onClick={() => handleDelete(task.id)}\n              style={{ borderRadius: \"6px\" }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}